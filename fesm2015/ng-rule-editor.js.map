{"version":3,"file":"ng-rule-editor.js","sources":["../../../projects/ng-rule-editor/src/lib/units.ts","../../../projects/ng-rule-editor/src/lib/rule-editor.service.ts","../../../projects/ng-rule-editor/src/lib/rule-editor.component.ts","../../../projects/ng-rule-editor/src/lib/variable.ts","../../../projects/ng-rule-editor/src/lib/variables/variables.component.ts","../../../projects/ng-rule-editor/src/lib/uneditable-variables/uneditable-variables.component.ts","../../../projects/ng-rule-editor/src/lib/question/question.component.ts","../../../projects/ng-rule-editor/src/lib/calculate-sum-prompt/calculate-sum-prompt.component.ts","../../../projects/ng-rule-editor/src/lib/math-to-fhirpath.pipe.ts","../../../projects/ng-rule-editor/src/lib/syntax-converter/syntax-converter.component.ts","../../../projects/ng-rule-editor/src/lib/syntax-preview/syntax-preview.component.ts","../../../projects/ng-rule-editor/src/lib/rule-editor.module.ts","../../../projects/ng-rule-editor/src/public-api.ts","../../../projects/ng-rule-editor/src/ng-rule-editor.ts"],"sourcesContent":["// Conversion table for simple units\nexport interface Unit {\n  unit: string;\n  factor: number;\n}\n\n// Supported unit conversions. Key is the \"from\" and value is the \"to\" array\nexport const UNIT_CONVERSION: { [key: string]: Unit[] } = {\n  kg: [{ unit: 'lbs', factor: 2.20462 }],\n  lbs: [{ unit: 'kg', factor: 0.453592 }],\n  '[in_i]': [{ unit: 'cm', factor: 2.54 }, { unit: 'm', factor: 0.0254 }]\n};\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as mathToFhirpath from 'math-to-fhirpath';\n\nimport { Question, UneditableVariable, Variable } from './variable';\nimport { UNIT_CONVERSION } from './units';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RuleEditorService {\n  syntaxType = 'simple';\n  linkIdContext: string;\n  uneditableVariablesChange: Subject<UneditableVariable[]> =\n    new Subject<UneditableVariable[]>();\n  variablesChange: Subject<Variable[]> = new Subject<Variable[]>();\n  questionsChange: Subject<Question[]> = new Subject<Question[]>();\n  mightBeScoreChange: Subject<boolean> = new Subject<boolean>();\n  finalExpressionChange: Subject<string> = new Subject<string>();\n  uneditableVariables: UneditableVariable[];\n  variables: Variable[];\n  questions: Question[];\n  finalExpression: string;\n\n  private LANGUAGE_FHIRPATH = 'text/fhirpath';\n  private QUESTION_REGEX = /^%resource\\.item\\.where\\(linkId='(.*)'\\)\\.answer\\.value(?:\\*(\\d*\\.?\\d*))?$/;\n  private VARIABLE_EXTENSION = 'http://hl7.org/fhir/StructureDefinition/variable';\n  private CALCULATED_EXPRESSION = 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-calculatedExpression';\n\n  private linkIdToQuestion = {};\n  private fhir;\n  mightBeScore = false;\n\n  constructor() {\n    this.variables = [];\n    this.uneditableVariables = [];\n  }\n\n  /**\n   * Create a new variable\n   */\n  addVariable(): void {\n    // Get all the existing variable names\n    const existingNames = this.variables.map((e) => e.label)\n      .concat(this.uneditableVariables.map((e) => e.name));\n\n    this.variables.push({\n      label: this.getNewLabelName(existingNames),\n      type: 'question',\n      expression: ''\n    });\n    this.variablesChange.next(this.variables);\n  }\n\n  /**\n   * Remove a variable\n   * @param i - index of variable to remove\n   */\n  remove(i: number): void {\n    this.variables.splice(i, 1);\n  }\n\n  /**\n   * Get the list of uneditable variables based on the FHIR Questionnaire\n   * @param fhir - FHIR Questionnaire\n   */\n  getUneditableVariables(fhir): UneditableVariable[] {\n    const launchContextExtensionUrl = 'http://hl7.org/fhir/StructureDefinition/questionnaire-launchContext';\n\n    if (Array.isArray(fhir.extension)) {\n      return fhir.extension.reduce((accumulator, extension) => {\n        if (extension.url === launchContextExtensionUrl && extension.extension) {\n          const uneditableVariable = {\n            name: extension.extension.find((e) => e.url === 'name').valueId,\n            type: extension.extension.filter((e) => e.url === 'type')?.map((e) => e.valueCode).join('|'),\n            description: extension.extension.find((e) => e.url === 'description')?.valueString\n          };\n\n          accumulator.push(uneditableVariable);\n        }\n        return accumulator;\n      }, []);\n    }\n\n    return [];\n  }\n\n  /**\n   * Get and remove the variables from the FHIR object\n   * @param fhir\n   */\n  extractVariables(fhir): Variable[] {\n    // Look at the top level fhirpath related extensions to populate the editable variables\n    // TODO look at the focus item variables\n\n    if (fhir.extension) {\n      const variables = [];\n      const nonVariableExtensions = [];\n\n      fhir.extension.forEach((extension) => {\n        if (extension.url === this.VARIABLE_EXTENSION &&\n          extension.valueExpression && extension.valueExpression.language === this.LANGUAGE_FHIRPATH) {\n          variables.push(\n            this.processVariable(extension.valueExpression.name, extension.valueExpression.expression));\n        } else {\n          nonVariableExtensions.push(extension);\n        }\n      });\n\n      // Remove the variables so they can be re-added on export\n      fhir.extension = nonVariableExtensions;\n\n      return variables;\n    }\n\n    return [];\n  }\n\n  /**\n   * Check if the current item has an ordinalValue extension on the answer\n   * @param item - Question item or linkId\n   */\n  itemHasScore(item): boolean {\n    if (typeof item === 'string') {\n      item = this.linkIdToQuestion[item];\n    }\n\n    return (item.answerOption || []).some((answerOption) => {\n      return (answerOption.extension || []).some((extension) => {\n        return extension.url === 'http://hl7.org/fhir/StructureDefinition/ordinalValue';\n      });\n    });\n  }\n\n  // TODO check if this is already a score calculation\n  /**\n   * Look at the ordinalValue on the answers of all the questions and if over the threshold\n   * percentage of the items have it return true\n   * @param fhir - FHIR Questionnaire\n   * @param linkIdContext - linkId to exclude from calculation\n   */\n  isProbablyScore(fhir, linkIdContext): boolean {\n    const THRESHOLD = 0.6;  // Percent of questions (minus the one we're editing)\n    // which need to be scores to determine we want to sum them up\n\n    let totalQuestions = fhir.item.length;\n    let scoreQuestions = 0;\n\n    fhir.item.forEach((item) => {\n      if (item.linkId === linkIdContext) {\n        totalQuestions--;\n      } else if (this.itemHasScore(item)) {\n        scoreQuestions++;\n      }\n    });\n\n    return scoreQuestions / totalQuestions >= THRESHOLD;\n  }\n\n  /**\n   * Import a FHIR Questionnaire to populate questions\n   * @param fhir - FHIR Questionnaire\n   * @param linkIdContext - Context to use for final expression\n   */\n  import(fhir, linkIdContext?): void {\n    this.linkIdContext = linkIdContext;  // TODO change notification for linkId?\n    this.fhir = fhir;\n\n    if (fhir.resourceType === 'Questionnaire' && fhir.item && fhir.item.length) {\n      this.mightBeScore = this.isProbablyScore(fhir, linkIdContext);\n      this.mightBeScoreChange.next(this.mightBeScore);\n\n      this.uneditableVariables = this.getUneditableVariables(fhir);\n      this.uneditableVariablesChange.next(this.uneditableVariables);\n\n      this.linkIdToQuestion = {};\n      const linkIdToQuestion = this.linkIdToQuestion;\n      this.processItem(fhir.item);\n\n      this.variables = this.extractVariables(fhir);\n      this.variablesChange.next(this.variables);\n\n      this.questions = [];\n\n      // tslint:disable-next-line:forin\n      for (const key in linkIdToQuestion) {\n        if (!linkIdToQuestion.hasOwnProperty(key)) {\n          return;\n        }\n        const e = linkIdToQuestion[key];\n        // TODO decimal vs choice\n        const MAX_Q_LEN = 60;  // Maximum question length before truncating.\n\n        const text = e.text;\n\n        this.questions.push({\n          linkId: e.linkId,\n          text: text.length > MAX_Q_LEN ? text.substring(0, MAX_Q_LEN) + '...' : text,\n          unit: this.getQuestionUnits(e.linkId)\n        });\n      }\n      this.questionsChange.next(this.questions);\n\n      this.finalExpression = this.extractFinalExpression(fhir.item, linkIdContext);\n      this.finalExpressionChange.next(this.finalExpression);\n    }\n  }\n\n  /**\n   * Process nested FHIR Questionnaire items\n   * @param items - Current level of item nesting\n   * @private\n   */\n  private processItem(items): void {\n    items.forEach((e) => {\n      this.linkIdToQuestion[e.linkId] = e;\n      if (e.item) {\n        this.processItem(e.item);\n      }\n    });\n  }\n\n  /**\n   * Get and remove the final expression\n   * @param items\n   * @param linkId\n   */\n  extractFinalExpression(items, linkId): string {\n    for (const item of items) {\n      if (item.extension) {\n        const extensionIndex = item.extension.findIndex((e) => {\n          return e.url === this.CALCULATED_EXPRESSION && e.valueExpression.language === this.LANGUAGE_FHIRPATH &&\n            e.valueExpression.expression;\n        });\n\n        if (extensionIndex !== -1) {\n          const finalExpression = item.extension[extensionIndex].valueExpression.expression;\n          item.extension.splice(extensionIndex, 1);\n\n          return finalExpression;\n        }\n      } else if (item.item) {\n        return this.extractFinalExpression(item.item, linkId);\n      }\n    }\n\n    return '';\n  }\n\n  /**\n   * Process the an expression into a possible question\n   * @param name - Name to assign variable\n   * @param expression - Expression to process\n   * @private\n   */\n  private processVariable(name, expression): Variable {\n    const matches = expression.match(this.QUESTION_REGEX);\n\n    if (matches !== null) {\n      const linkId = matches[1];\n      const factor = matches[2];\n\n      const variable: Variable = {\n        label: name,\n        type: 'question',\n        linkId,\n        expression\n      };\n\n      if (factor) {\n        // We might be able to do unit conversion\n        const sourceUnits = this.getQuestionUnits(linkId);\n\n        if (UNIT_CONVERSION.hasOwnProperty(sourceUnits)) {\n          const conversions = UNIT_CONVERSION[sourceUnits];\n          const conversion = conversions.find((e) => {\n            return e.factor.toString() === factor;\n          });\n\n          variable.unit = conversion.unit;\n        }\n      }\n\n      return variable;\n    } else {\n      return {\n        label: name,\n        type: 'expression',\n        expression\n      };\n    }\n  }\n\n  // TODO check behavior of repeating linkId\n  /**\n   * Get question units for the question\n   * @param linkId - Question linkId\n   * @private\n   */\n  private getQuestionUnits(linkId): string {\n    const QUESTIONNAIRE_UNIT = 'http://hl7.org/fhir/StructureDefinition/questionnaire-unit';\n    const question = this.linkIdToQuestion[linkId];\n\n    if (question.extension) {\n      const extension = question.extension.find((e) => {\n        return e.url === QUESTIONNAIRE_UNIT &&\n          e.valueCoding.system && e.valueCoding.system === 'http://unitsofmeasure.org';\n      });\n\n      if (extension && extension.valueCoding.code) {\n        return extension.valueCoding.code;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Generate a label name like A, B, C, ... AA, AB which is not already used\n   * @param existingNames {string[]} - Array of names already used by existing variables\n   * @private\n   */\n  private getNewLabelName(existingNames: string[]): string {\n    // All letters which can be used for a simple variable name\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\n    // First pass is with a single character variable name. Other passes are with two\n    const firstLetterAlphabet = [''].concat(alphabet);\n    for (const firstLetter of firstLetterAlphabet) {\n      for (const secondLetter of alphabet) {\n        const potentialName = firstLetter + secondLetter;\n\n        const count = existingNames.filter((e) => e === potentialName);\n\n        if (count.length === 0) {\n          return potentialName;\n        }\n      }\n    }\n\n    // Don't return a suggested name if we exhausted all combinations\n    return '';\n  }\n\n  /**\n   * Toggle the mightBeScore\n   */\n  toggleMightBeScore(): void {\n    this.mightBeScore = !this.mightBeScore;\n    this.mightBeScoreChange.next(this.mightBeScore);\n  }\n\n  /**\n   * Add variables and finalExpression and return the new FHIR Questionnaire\n   * @param finalExpression\n   */\n  export(finalExpression: string): object {\n    // TODO support for different variable scopes\n    // Copy the fhir object so we can export more than once\n    // (if we add our data the second export will have duplicates)\n    const fhir = JSON.parse(JSON.stringify(this.fhir));\n\n    const variablesToAdd = this.variables.map((e) => {\n      return {\n        url: this.VARIABLE_EXTENSION,\n        valueExpression: {\n          name: e.label,\n          language: this.LANGUAGE_FHIRPATH,\n          expression: e.expression\n        }\n      };\n    });\n\n    if (fhir.extension) {\n      fhir.extension = fhir.extension.concat(variablesToAdd);\n    } else {\n      fhir.extension = variablesToAdd;\n    }\n\n    const finalExpressionExtension = {\n      url: this.CALCULATED_EXPRESSION,\n      valueExpression: {\n        language: this.LANGUAGE_FHIRPATH,\n        expression: finalExpression\n      }\n    };\n\n    this.insertExtensions(fhir.item, this.linkIdContext, [finalExpressionExtension]);\n\n    return fhir;\n  }\n\n\n  /**\n   * Takes FHIR questionnaire definition and a linkId and returns a new FHIR\n   * Questionnaire with a calculated expression at the given linkId which sums up\n   * all the ordinal values in the questionnaire\n   */\n  addTotalScoreRule(fhir, linkId): object {\n    this.fhir = fhir;\n    this.linkIdContext = linkId;\n    return this.exportSumOfScores();\n  }\n\n  /**\n   * Given the current FHIR questionnaire definition and a linkId return a new FHIR\n   * Questionnaire with a calculated expression at the given linkId which sums up\n   * all the ordinal values in the questionnaire\n   */\n  exportSumOfScores(): object {\n    const fhir = this.fhir;\n    const linkIdContext = this.linkIdContext;\n\n    const variableNames = [];\n    const scoreQuestionLinkIds = [];\n\n    // Get an array of linkIds for score questions\n    fhir.item.forEach((item) => {\n      if (item.linkId !== linkIdContext && this.itemHasScore(item)) {\n        scoreQuestionLinkIds.push(item.linkId);\n      }\n    });\n\n    // Get as many short suggested variable names as we have score questions\n    scoreQuestionLinkIds.forEach(() => {\n      variableNames.push(this.getNewLabelName(variableNames));\n    });\n\n    const scoreQuestions = scoreQuestionLinkIds.map((e, i) => {\n      return {\n        url: this.VARIABLE_EXTENSION,\n        valueExpression: {\n          name: variableNames[i],\n          language: this.LANGUAGE_FHIRPATH,\n          expression: `%questionnaire.item.where(linkId = '${e}').answerOption` +\n            `.where(valueCoding.code=%resource.item.where(linkId = '${e}').answer.valueCoding.code).extension` +\n            `.where(url='http://hl7.org/fhir/StructureDefinition/ordinalValue').value`\n        }\n      };\n    });\n\n    const anyQuestionAnswered = {\n      url: this.VARIABLE_EXTENSION,\n      valueExpression: {\n        name: 'any_questions_answered',\n        language: this.LANGUAGE_FHIRPATH,\n        expression: variableNames.map((e) => `%${e}.exists()`).join(' or ')\n      }\n    };\n\n    const sumString = variableNames.map((e) => `iif(%${e}.exists(), %${e}, 0)`).join(' + ');\n\n    const totalCalculation = {\n      url: this.CALCULATED_EXPRESSION,\n      valueExpression: {\n        description: 'Total score calculation',\n        language: this.LANGUAGE_FHIRPATH,\n        expression: `iif(%any_questions_answered, ${sumString}, {})`\n      }\n    };\n\n    scoreQuestions.push(anyQuestionAnswered);\n    // @ts-ignore\n    scoreQuestions.push(totalCalculation);\n\n    this.insertExtensions(fhir.item, linkIdContext, scoreQuestions);\n\n    return fhir;\n  }\n\n  private insertExtensions(items, linkId, extensions): void {\n    for (const item of items) {\n      if (item.linkId === linkId) {\n        if (item.extension) {\n          item.extension = item.extension.concat(extensions);\n        } else {\n          item.extension = extensions;\n        }\n        break;\n      } else if (item.item) {\n        this.insertExtensions(item.item, linkId, extensions);\n      }\n    }\n  }\n\n  /**\n   * Get the expression for a question\n   * @param linkId - Question linkId\n   * @param itemHasScore - Answer has an ordinalValue extension\n   * @param convertible - Units can be converted\n   * @param unit - Base units\n   * @param toUnit - Destination units\n   */\n  valueOrScoreExpression(linkId: string, itemHasScore: boolean, convertible: boolean, unit: string, toUnit: string): string {\n    if (itemHasScore) {\n      return `%questionnaire.item.where(linkId = '${linkId}').answerOption` +\n        `.where(valueCoding.code=%resource.item.where(linkId = '${linkId}').answer.valueCoding.code).extension` +\n        `.where(url='http://hl7.org/fhir/StructureDefinition/ordinalValue').value`;\n    } else if (convertible && unit && toUnit) {\n      const factor = UNIT_CONVERSION[unit].find((e) => e.unit === toUnit).factor;\n      return `%resource.item.where(linkId='${linkId}').answer.value*${factor}`;\n    } else {\n      return `%resource.item.where(linkId='${linkId}').answer.value`;\n    }\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { MatRadioChange } from '@angular/material/radio';\n\nimport { RuleEditorService } from './rule-editor.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'lhc-rule-editor',\n  templateUrl: 'rule-editor.component.html',\n  styleUrls: ['rule-editor.component.css']\n})\nexport class RuleEditorComponent implements OnChanges {\n  @Input() fhirQuestionnaire = null;\n  @Input() itemLinkId = null;\n  @Input() submitButtonName = 'Submit';\n  @Input() titleName: string;\n  @Output() save = new EventEmitter<object>();\n\n  expressionSyntax: string;\n  advancedInterface = true;\n  finalExpression: string;\n  finalExpressionFhirPath: string;\n  linkIdContext: string;\n  datePipe = new DatePipe('en-US');\n  calculateSum: boolean;\n  suggestions = [];\n  variables: string[];\n\n  private calculateSumSubscription;\n  private finalExpressionSubscription;\n  private variablesSubscription;\n\n  constructor(private variableService: RuleEditorService) {}\n\n  /**\n   * Angular lifecycle hook called before the component is destroyed\n   */\n  ngDestroy(): void {\n    this.calculateSumSubscription.unsubscribe();\n    this.finalExpressionSubscription.unsubscribe();\n    this.variablesSubscription.unsubscribe();\n  }\n\n  /**\n   * Angular lifecycle hook called on input changes\n   */\n  ngOnChanges(): void {\n    this.reload();\n  }\n\n  /**\n   * Re-import fhir and context and show the form\n   */\n  reload(): void {\n    if (this.fhirQuestionnaire !== null && this.itemLinkId !== null) {\n      this.variableService.import(this.fhirQuestionnaire, this.itemLinkId);\n    }\n\n    this.linkIdContext = this.variableService.linkIdContext;\n    this.expressionSyntax = this.variableService.syntaxType;\n    this.calculateSum = this.variableService.mightBeScore;\n    this.calculateSumSubscription = this.variableService.mightBeScoreChange.subscribe((mightBeScore) => {\n      this.calculateSum = mightBeScore;\n    });\n    this.finalExpression = this.variableService.finalExpression;\n    this.finalExpressionSubscription = this.variableService.finalExpressionChange.subscribe((finalExpression) => {\n      this.finalExpression = finalExpression;\n    });\n    this.variables = this.variableService.variables.map(e => e.label);\n    this.variablesSubscription = this.variableService.variablesChange.subscribe((variables) => {\n      this.variables = variables.map(e => e.label);\n    });\n  }\n\n  /**\n   * Import uploaded data as a FHIR Questionnaire\n   * @param fileInput - Form file upload\n   */\n  import(fileInput): void {\n    if (fileInput.target.files && fileInput.target.files[0]) {\n      const fileReader = new FileReader();\n\n      fileReader.onload = (e) => {\n        if (typeof e.target.result === 'string') {\n          try {\n            const input = JSON.parse(e.target.result);\n\n            this.variableService.import(input, this.linkIdContext);\n          } catch (e) {\n            console.error('Could not parse file', e);\n          }\n        } else {\n          console.error('Could not read file');\n        }\n      };\n\n      fileReader.readAsText(fileInput.target.files[0]);\n    }\n    fileInput.target.value = '';\n  }\n\n  /**\n   * Export FHIR Questionnaire and download as a file\n   */\n  export(): void {\n    this.save.emit(this.variableService.export(this.finalExpression));\n  }\n\n  /**\n   * Export FHIR questionnaire file by summing all ordinal values\n   */\n  exportSumOfScores(): void {\n    this.save.emit(this.variableService.exportSumOfScores());\n  }\n\n  /**\n   * Download data as a file\n   * @param data - Object which will this function will call JSON.stringify on\n   * @param fileName - File name to download as\n   * @private\n   */\n  private downloadAsFile(data, fileName?): void {\n    const blob = new Blob([\n      JSON.stringify(data, null, 2)\n    ]);\n\n    const date = this.datePipe.transform(Date.now(), 'yyyyMMdd-hhmmss');\n\n    fileName = fileName ? fileName : `fhirpath-${date}.json`;\n\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob, fileName);\n    } else {\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n\n      a.setAttribute('style', 'display: none');\n      a.href = url;\n      a.download = fileName;\n      a.click();\n      window.URL.revokeObjectURL(url);\n      a.remove();\n    }\n  }\n\n  /**\n   * Called when the syntax type is changed to clean up expressions if the data cannot be converted\n   * @param $event - event from from the caller\n   */\n  onSyntaxChange($event: MatRadioChange): void {\n    const newSyntax = $event.value;\n\n    // Clear the existing expression if switching away from fhirpath\n    if (newSyntax === 'simple') {\n      this.finalExpression = '';\n    }\n\n    this.variableService.syntaxType = newSyntax;\n  }\n\n  /**\n   * Update the final expression\n   * @param expression\n   */\n  updateFinalExpression(expression): void {\n    this.finalExpression = expression;\n  }\n}\n","export interface UneditableVariable {\n  name: string;\n  type?: string;\n  description?: string;\n}\n\nexport interface Variable {\n  label: string;\n  type: string;\n  expression: string;\n  simple?: string;\n  linkId?: string;\n  unit?: string;\n}\n\nexport interface Question {\n  linkId: string;\n  text: string;\n  itemHasScore?: boolean;\n  unit?: string;\n}\n\nexport enum VariableType {\n  question = 'Question',\n  expression = 'FHIRPath Expression',\n  simple = 'Simple Expression'\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { Variable, VariableType } from '../variable';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { RuleEditorService } from '../rule-editor.service';\n\n@Component({\n  selector: 'lhc-variables',\n  templateUrl: './variables.component.html',\n  styleUrls: ['./variables.component.css']\n})\nexport class VariablesComponent implements OnInit {\n  @Input() advancedInterface;\n  variableType = VariableType;\n  variableSubscription;\n  variables: Variable[];\n  levels = [{\n      level: 0,\n      name: 'Top Level Scope'\n    }\n  ];\n\n  constructor(private ruleEditorService: RuleEditorService) {}\n\n  /**\n   * Angular lifecycle hook called when the component is initialized\n   */\n  ngOnInit(): void {\n    this.variables = this.ruleEditorService.variables;\n    this.variableSubscription = this.ruleEditorService.variablesChange.subscribe((variables) => {\n      this.variables = variables;\n    });\n  }\n\n  /**\n   * Angular lifecycle hook called before the component is destroyed\n   */\n  ngDestroy(): void {\n    this.variableSubscription.unsubscribe();\n  }\n\n  /**\n   * Called when adding a new variable\n   */\n  onAdd(): void {\n    this.ruleEditorService.addVariable();\n  }\n\n  /**\n   * Remove a variable at an index\n   * @param i - index to remove\n   */\n  onRemove(i: number): void {\n    this.ruleEditorService.remove(i);\n  }\n\n  /**\n   * Drag and drop rearrange of variable order\n   * @param event - drag and drop event\n   */\n  drop(event: CdkDragDrop<Variable[]>): void {\n    moveItemInArray(this.variables, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n   * Get the labels of available variables at the current index\n   * @param index - Index of variable we're editing\n   */\n  getAvailableVariables(index: number): Array<string> {\n    const uneditableVariables = this.ruleEditorService.uneditableVariables.map((e) => e.name);\n    // Only return variables up to but not including index\n    const editableVariables = this.variables.map((e) => e.label).slice(0, index);\n\n    return uneditableVariables.concat(editableVariables);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RuleEditorService } from '../rule-editor.service';\nimport { UneditableVariable } from '../variable';\n\n@Component({\n  selector: 'lhc-uneditable-variables',\n  templateUrl: './uneditable-variables.component.html'\n})\nexport class UneditableVariablesComponent implements OnInit {\n  uneditableVariables: UneditableVariable[];\n  uneditableVariablesSubscription;\n\n  constructor(private variableService: RuleEditorService) {}\n\n  /**\n   * Angular lifecycle hook called when the component is initialized\n   */\n  ngOnInit(): void {\n    this.uneditableVariables = this.variableService.uneditableVariables;\n    this.uneditableVariablesSubscription =\n        this.variableService.uneditableVariablesChange.subscribe((variables) => {\n      this.uneditableVariables = variables;\n    });\n  }\n\n  /**\n   * Angular lifecycle hook called before the component is destroyed\n   */\n  ngDestroy(): void {\n    this.uneditableVariablesSubscription.unsubscribe();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Question } from '../variable';\nimport { RuleEditorService } from '../rule-editor.service';\nimport { Unit, UNIT_CONVERSION } from '../units';\n\n@Component({\n  selector: 'lhc-question',\n  templateUrl: './question.component.html'\n})\nexport class QuestionComponent implements OnInit {\n  @Input() variable;\n  @Input() advancedInterface;\n  linkId = '';\n  questions: Question[];\n  itemHasScore = false;\n  isNonConvertibleUnit = false;\n  toUnit: string;\n  unit: string;\n  conversionOptions: Unit[];\n\n  constructor(private variableService: RuleEditorService) {}\n\n  /**\n   * Angular lifecycle hook called when the component is initialized\n   */\n  ngOnInit(): void {\n    this.linkId = this.variable.linkId ? this.variable.linkId : '';\n    this.toUnit = this.variable.unit ? this.variable.unit : '';\n    this.questions = this.variableService.questions;\n\n    this.onChange(false);\n\n    this.variableService.questionsChange.subscribe((questions) => {\n      this.questions = questions;\n    });\n  }\n\n  /**\n   * Get the question based on linkId\n   * @param linkId - FHIR linkId\n   */\n  getQuestion(linkId): Question {\n    return this.questions.find((q) => {\n      return q.linkId === linkId;\n    });\n  }\n\n  /**\n   * Get the list of units we can convert to based on the starting unit\n   * @param unit - Starting unit\n   */\n  getConversionOptions(unit: string): Unit[] {\n    return UNIT_CONVERSION[unit];\n  }\n\n  /**\n   * Called when the questionnaire question or unit is changed\n   * @param isQuestion - The change was for a question\n   */\n  onChange(isQuestion): void {\n    if (isQuestion) {\n      // Reset the conversion options when the question changes\n      this.toUnit = '';\n    }\n\n    // If we already have a question selected (as opposed to the select... prompt)\n    if (this.linkId) {\n      const question = this.getQuestion(this.linkId);\n      this.unit = question?.unit;\n      this.conversionOptions = this.getConversionOptions(this.unit);\n      this.isNonConvertibleUnit = this.unit && !this.conversionOptions;\n\n      // Check if this is a score\n      if (!this.conversionOptions && !this.isNonConvertibleUnit) {\n        this.itemHasScore = this.variableService.itemHasScore(this.linkId);\n      } else {\n        this.itemHasScore = false;\n      }\n\n      this.variable.expression = this.variableService.valueOrScoreExpression(\n        this.linkId, this.itemHasScore, !this.isNonConvertibleUnit, this.unit, this.toUnit);\n    }\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { RuleEditorService } from '../rule-editor.service';\n\n@Component({\n  selector: 'lhc-calculate-sum-prompt',\n  templateUrl: './calculate-sum-prompt.component.html',\n  styleUrls: ['./calculate-sum-prompt.component.css']\n})\nexport class CalculateSumPromptComponent implements OnInit {\n  @Output() export: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private ruleEditorService: RuleEditorService) { }\n\n  /**\n   * Angular lifecycle hook called when the component is initialized\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Close the dialog by specifying this should not be a score calculation\n   */\n  onCloseClick(): void {\n    this.ruleEditorService.toggleMightBeScore();\n  }\n\n  /**\n   * Export the sum of scores as a FHIR Questionnaire\n   */\n  onExportClick(): void {\n    this.export.emit();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as mathToFhirpath from 'math-to-fhirpath';\n\n@Pipe({\n  name: 'mathToFhirpath'\n})\nexport class MathToFhirpathPipe implements PipeTransform {\n\n  transform(value: string, variables: string[]): string {\n    if (value !== undefined) {\n      const fhirPath = mathToFhirpath.fhirconvert(value, variables);\n      if (fhirPath !== null) {\n        return fhirPath;\n      }\n    }\n\n    return 'Not valid';\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MathToFhirpathPipe } from '../math-to-fhirpath.pipe';\n\n@Component({\n  selector: 'lhc-syntax-converter',\n  templateUrl: './syntax-converter.component.html',\n  styleUrls: ['./syntax-converter.component.css']\n})\nexport class SyntaxConverterComponent implements OnInit {\n  @Input() value;\n  @Input() variables;\n  @Output() expressionChange = new EventEmitter<string>();\n\n  expression: string;\n  fhirPathExpression: string;\n  jsToFhirPathPipe = new MathToFhirpathPipe();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  onExpressionChange(value): void {\n    const fhirPath: string = this.jsToFhirPathPipe.transform(value, this.variables);\n    this.fhirPathExpression = fhirPath;\n\n    this.expressionChange.emit(fhirPath);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lhc-syntax-preview',\n  templateUrl: './syntax-preview.component.html',\n  styleUrls: ['./syntax-preview.component.css']\n})\nexport class SyntaxPreviewComponent implements OnInit {\n  @Input() syntax;\n  @Input() showWhenEmpty = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RuleEditorComponent } from './rule-editor.component';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { VariablesComponent } from './variables/variables.component';\nimport { UneditableVariablesComponent } from './uneditable-variables/uneditable-variables.component';\nimport { QuestionComponent } from './question/question.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CalculateSumPromptComponent } from './calculate-sum-prompt/calculate-sum-prompt.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MathToFhirpathPipe } from './math-to-fhirpath.pipe';\nimport { SyntaxConverterComponent } from './syntax-converter/syntax-converter.component';\nimport { SyntaxPreviewComponent } from './syntax-preview/syntax-preview.component';\n\n\n\n@NgModule({\n  declarations: [\n    RuleEditorComponent,\n    VariablesComponent,\n    UneditableVariablesComponent,\n    QuestionComponent,\n    CalculateSumPromptComponent,\n    MathToFhirpathPipe,\n    SyntaxConverterComponent,\n    SyntaxPreviewComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n    MatRadioModule\n  ],\n  exports: [\n    RuleEditorComponent\n  ]\n})\nexport class RuleEditorModule { }\n","/*\n * Public API Surface of ng-rule-editor\n */\n\nexport * from './lib/rule-editor.service';\nexport * from './lib/rule-editor.component';\nexport * from './lib/rule-editor.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CalculateSumPromptComponent as ɵd} from './lib/calculate-sum-prompt/calculate-sum-prompt.component';\nexport {MathToFhirpathPipe as ɵe} from './lib/math-to-fhirpath.pipe';\nexport {QuestionComponent as ɵc} from './lib/question/question.component';\nexport {SyntaxConverterComponent as ɵf} from './lib/syntax-converter/syntax-converter.component';\nexport {SyntaxPreviewComponent as ɵg} from './lib/syntax-preview/syntax-preview.component';\nexport {UneditableVariablesComponent as ɵb} from './lib/uneditable-variables/uneditable-variables.component';\nexport {VariablesComponent as ɵa} from './lib/variables/variables.component';"],"names":[],"mappings":"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"}