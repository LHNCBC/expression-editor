{"__symbolic":"module","version":4,"metadata":{"RuleEditorService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":7,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"addVariable":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}],"getUneditableVariables":[{"__symbolic":"method"}],"extractVariables":[{"__symbolic":"method"}],"itemHasScore":[{"__symbolic":"method"}],"isProbablyScore":[{"__symbolic":"method"}],"import":[{"__symbolic":"method"}],"processItem":[{"__symbolic":"method"}],"extractFinalExpression":[{"__symbolic":"method"}],"processVariable":[{"__symbolic":"method"}],"getQuestionUnits":[{"__symbolic":"method"}],"getNewLabelName":[{"__symbolic":"method"}],"toggleMightBeScore":[{"__symbolic":"method"}],"export":[{"__symbolic":"method"}],"addTotalScoreRule":[{"__symbolic":"method"}],"exportSumOfScores":[{"__symbolic":"method"}],"insertExtensions":[{"__symbolic":"method"}],"valueOrScoreExpression":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"RuleEditorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"lhc-rule-editor","template":"<lhc-calculate-sum-prompt *ngIf=\"calculateSum\" (export)=\"exportSumOfScores()\"></lhc-calculate-sum-prompt>\n<div *ngIf=\"!calculateSum\">\n  <h1>{{titleName}}</h1>\n\n  <section id=\"uneditable-variables-section\" class=\"mb-3\">\n    <lhc-uneditable-variables></lhc-uneditable-variables>\n  </section>\n\n  <section id=\"variables-section\" class=\"mb-3\">\n    <lhc-variables [advancedInterface]=\"advancedInterface\"></lhc-variables>\n  </section>\n\n  <section id=\"final-expression-section\" class=\"mb-3\">\n    <h2>Final Expression</h2>\n\n<!--    <div *ngIf=\"advancedInterface\">-->\n<!--      <mat-radio-group [(ngModel)]=\"expressionSyntax\" (change)=\"onSyntaxChange($event)\" aria-label=\"Select an option\">-->\n<!--        <mat-radio-button value=\"simple\">Simple Expression Syntax</mat-radio-button>-->\n<!--        <mat-radio-button value=\"fhirpath\">FHIRPath Expression Syntax</mat-radio-button>-->\n<!--      </mat-radio-group>-->\n<!--    </div>-->\n\n    <div class=\"container\">\n      <div class=\"row form-group\">\n        <div class=\"col-md-3\">\n          <div class=\"form-inline\">\n            <select class=\"form-control\" [(ngModel)]=\"expressionSyntax\" aria-label=\"Expression syntax type\">\n              <option value=\"simple\">Simple Expression</option>\n              <option value=\"fhirpath\">FHIRPath Expression</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"col-md-9\" [ngSwitch]=\"expressionSyntax\">\n          <lhc-syntax-converter [variables]=\"variables\" *ngSwitchCase=\"'simple'\" (expressionChange)=\"updateFinalExpression($event)\" class=\"form-inline\"></lhc-syntax-converter>\n          <input aria-label=\"FHIRPath\" *ngSwitchCase=\"'fhirpath'\" id=\"final-expression\" class=\"form-control\" [(ngModel)]=\"finalExpression\">\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"suggestions.length\">{{suggestions|json}}</div>\n  </section>\n\n  <button class=\"btn btn-primary py-2 px-5\" (click)=\"export()\" id=\"export\">{{submitButtonName}}</button>\n</div>\n","styles":[".toolbar-button{height:2.7rem}.file-import{width:4.6rem;color:transparent}.file-import::-webkit-file-upload-button{visibility:hidden}.file-import:before{content:\"Import\";display:inline-block;cursor:pointer;color:#fff}mat-radio-button{margin-left:1em}"]}]}],"members":{"fhirQuestionnaire":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"itemLinkId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"submitButtonName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"titleName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"save":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"RuleEditorService"}]}],"ngDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"reload":[{"__symbolic":"method"}],"import":[{"__symbolic":"method"}],"export":[{"__symbolic":"method"}],"exportSumOfScores":[{"__symbolic":"method"}],"downloadAsFile":[{"__symbolic":"method"}],"onSyntaxChange":[{"__symbolic":"method"}],"updateFinalExpression":[{"__symbolic":"method"}]}},"RuleEditorModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":18,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"RuleEditorComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"}],"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":30,"character":4},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":31,"character":4},{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"DragDropModule","line":32,"character":4},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":33,"character":4}],"exports":[{"__symbolic":"reference","name":"RuleEditorComponent"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"lhc-variables","template":"<h2>Variables</h2>\n\n<div class=\"container\">\n  <div class=\"row font-weight-bold mb-2\" aria-hidden=\"true\">\n    <div class=\"col-md-2\">Label</div>\n    <div class=\"col-md-3\">Type</div>\n    <div class=\"col-md-7\">Question/FHIRPath Expression</div>\n  </div>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\">\n    <div class=\"variable-row drag-variable row py-2\" *ngFor=\"let variable of variables; index as i\" [id]=\"'row-' + i\" cdkDrag>\n      <div class=\"col-md-2 form-inline\">\n        <!-- Inline SVG for the row drag and drop handle -->\n        <svg cdkDragHandle xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-grip-vertical mr-2 handle\" viewBox=\"0 0 16 16\">\n          <path d=\"M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n        </svg>\n        <input [id]=\"'variable-label-' + i\" [(ngModel)]=\"variable.label\" class=\"form-control w-75\" aria-label=\"Variable label\" />\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"form-inline\">\n          <select [id]=\"'variable-type-' + i\" class=\"form-control\" [(ngModel)]=\"variable.type\" aria-label=\"Variable type\">\n            <option value=\"\" disabled hidden>Select...</option>\n            <option *ngFor=\"let type of variableType | keyvalue\" value=\"{{type.key}}\">{{type.value}}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"col-md-6\" [ngSwitch]=\"variable.type\">\n        <lhc-question [variable]=\"variable\" [advancedInterface]=\"advancedInterface\" *ngSwitchCase=\"'question'\"></lhc-question>\n        <div class=\"form-inline\" *ngSwitchCase=\"'simple'\">\n          <input [id]=\"'variable-expression-' + i\" [(ngModel)]=\"variable.simple\" class=\"form-control mr-2 w-100\"\n                 aria-label=\"Simple Expression\" />\n          <lhc-syntax-preview [syntax]=\"variable.simple | mathToFhirpath:getAvailableVariables(i)\"></lhc-syntax-preview>\n        </div>\n        <div class=\"form-inline\" *ngSwitchCase=\"'expression'\">\n          <input [id]=\"'variable-expression-' + i\" [(ngModel)]=\"variable.expression\" class=\"form-control mr-2 w-100\"\n                 aria-label=\"FHIRPath Expression\" />\n        </div>\n      </div>\n      <div class=\"col-md-1\">\n        <button class=\"btn btn-danger remove-variable\" aria-label=\"Remove Line\" (click)=\"onRemove(i)\">x</button>\n      </div>\n    </div>\n    <div *ngIf=\"!variables.length\" class=\"py-2\">No variables, please <a href=\"#\" (click)=\"onAdd()\">add one</a>.</div>\n  </div>\n</div>\n\n<button id=\"add-variable\" class=\"btn btn-secondary mt-2\" (click)=\"onAdd()\">Add variable</button>\n","styles":[".example-list{width:500px;max-width:100%;border:1px solid #ccc;min-height:60px;display:block;background:#fff;border-radius:4px;overflow:hidden}.drag-variable{padding:20px 10px;border-top:1px solid rgba(0,0,0,.1);color:rgba(0,0,0,.87);display:flex;flex-direction:row;align-items:center;justify-content:space-between;box-sizing:border-box;background:#fff}.handle{cursor:move}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"]}]}],"members":{"advancedInterface":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"RuleEditorService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngDestroy":[{"__symbolic":"method"}],"onAdd":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}],"drop":[{"__symbolic":"method"}],"getAvailableVariables":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"lhc-uneditable-variables","template":"<div *ngIf=\"uneditableVariables.length\">\n  <h2>Un-editable Variables</h2>\n\n  <div class=\"container mb-4\">\n    <div class=\"row font-weight-bold\" aria-hidden=\"true\">\n      <div class=\"col-2\">Label</div>\n      <div class=\"col-2\">Type</div>\n      <div class=\"col-8\">Description</div>\n    </div>\n    <hr>\n    <div class=\"row\" *ngFor=\"let variable of uneditableVariables\">\n      <div class=\"col-2\"><span class=\"sr-only\">Label</span>{{variable.name}}</div>\n      <div class=\"col-2\"><span class=\"sr-only\">Label</span>{{variable.type}}</div>\n      <div class=\"col-8\"><span class=\"sr-only\">Description</span>{{variable.description}}</div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"RuleEditorService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngDestroy":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"lhc-question","template":"<div class=\"form-inline\">\n  <select class=\"question-select form-control mr-2 w-50\" [(ngModel)]=\"linkId\" (change)=\"onChange(true)\" aria-label=\"Question\">\n    <option value=\"\" disabled hidden>Select...</option>\n    <option *ngFor=\"let question of questions\" [value]=\"question.linkId\">\n      {{question.text}}{{advancedInterface ? ' (' + question.linkId + ')' : ''}}\n    </option>\n  </select>\n\n  <select class=\"unit-select form-control\" style=\"width: 40%\" *ngIf=\"conversionOptions\" [(ngModel)]=\"toUnit\"\n          (change)=\"onChange(false)\" aria-label=\"Unit conversion\">\n    <option value=\"\">Keep form units ({{unit}})</option>\n    <option *ngFor=\"let u of conversionOptions\" value=\"{{u.unit}}\">Convert to {{u.unit}}</option>\n  </select>\n  <span *ngIf=\"isNonConvertibleUnit\">{{unit}}</span>\n  <span *ngIf=\"itemHasScore\">Score</span>\n\n  <lhc-syntax-preview [syntax]=\"variable.expression\"></lhc-syntax-preview>\n</div>\n"}]}],"members":{"variable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"advancedInterface":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"RuleEditorService"}]}],"ngOnInit":[{"__symbolic":"method"}],"getQuestion":[{"__symbolic":"method"}],"getConversionOptions":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"lhc-calculate-sum-prompt","template":"<div class=\"score-modal\">\n  <p>It looks like this might be a score calculation.</p>\n\n  <p>Would you like to calculate the sum of scores?</p>\n\n  <button class=\"btn btn-primary py-2 px-5 mx-2\" (click)=\"onExportClick()\" id=\"export-score\">Yes</button>\n  <button class=\"btn btn-secondary py-2 px-5 mx-2\" (click)=\"onCloseClick()\" id=\"skip-export-score\">No</button>\n</div>\n","styles":[".score-modal{text-align:center}"]}]}],"members":{"export":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":9,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"RuleEditorService"}]}],"ngOnInit":[{"__symbolic":"method"}],"onCloseClick":[{"__symbolic":"method"}],"onExportClick":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":3,"character":1},"arguments":[{"name":"mathToFhirpath"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"lhc-syntax-converter","template":"<input [(ngModel)]=\"expression\" (ngModelChange)=\"onExpressionChange($event)\"\n       class=\"form-control mr-2 w-100\" id=\"simple-expression\" aria-label=\"Simple Expression\" />\n<lhc-syntax-preview [syntax]=\"fhirPathExpression\" [showWhenEmpty]=\"true\"></lhc-syntax-preview>\n","styles":[":host{width:100%}"]}]}],"members":{"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"variables":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"expressionChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":11,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onExpressionChange":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"lhc-syntax-preview","template":"<div class=\"mt-2 syntax-preview text-muted\" *ngIf=\"syntax || showWhenEmpty\">\n  FHIRPath: <pre class=\"d-inline text-muted\" title=\"{{syntax}}\">{{syntax}}</pre>\n</div>\n","styles":[":host{overflow:hidden}.syntax-preview{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}"]}]}],"members":{"syntax":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":8,"character":3}}]}],"showWhenEmpty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}}},"origins":{"RuleEditorService":"./lib/rule-editor.service","RuleEditorComponent":"./lib/rule-editor.component","RuleEditorModule":"./lib/rule-editor.module","ɵa":"./lib/variables/variables.component","ɵb":"./lib/uneditable-variables/uneditable-variables.component","ɵc":"./lib/question/question.component","ɵd":"./lib/calculate-sum-prompt/calculate-sum-prompt.component","ɵe":"./lib/math-to-fhirpath.pipe","ɵf":"./lib/syntax-converter/syntax-converter.component","ɵg":"./lib/syntax-preview/syntax-preview.component"},"importAs":"ng-rule-editor"}