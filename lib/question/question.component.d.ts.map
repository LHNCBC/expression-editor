{"version":3,"file":"question.component.d.ts","sources":["question.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { Question } from '../variable';\nimport { RuleEditorService, SimpleStyle } from '../rule-editor.service';\nimport { Unit } from '../units';\nexport declare class QuestionComponent implements OnInit {\n    private variableService;\n    variable: any;\n    lhcStyle: SimpleStyle;\n    linkId: string;\n    questions: Question[];\n    itemHasScore: boolean;\n    isNonConvertibleUnit: boolean;\n    toUnit: string;\n    unit: string;\n    conversionOptions: Unit[];\n    constructor(variableService: RuleEditorService);\n    /**\n     * Angular lifecycle hook called when the component is initialized\n     */\n    ngOnInit(): void;\n    /**\n     * Get the question based on linkId\n     * @param linkId - FHIR linkId\n     */\n    getQuestion(linkId: any): Question;\n    /**\n     * Get the list of units we can convert to based on the starting unit\n     * @param unit - Starting unit\n     */\n    getConversionOptions(unit: string): Unit[];\n    /**\n     * Called when the questionnaire question or unit is changed\n     * @param isQuestion - The change was for a question\n     */\n    onChange(isQuestion: any): void;\n}\n"]}